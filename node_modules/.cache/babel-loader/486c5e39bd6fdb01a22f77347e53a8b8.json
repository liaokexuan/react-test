{"ast":null,"code":"var _jsxFileName = \"/Users/kexuanliao/react-test/react-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport Count from './component/count';\nimport { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Login from './component/login';\nimport DataGridDemo from './component/dataGrid';\nimport LoginForm from './component/loginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  dataGrid: {\n    padding: theme.spacing(2),\n    marginTop: '20px'\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n\n  const login = () => {\n    if (name == \"abc\") {\n      setValue(true);\n    }\n\n    console.log('form value' + name);\n  };\n\n  const nameChange = e => {\n    setName(e.target.value);\n  };\n\n  const getData = data => {\n    setName(data);\n  };\n\n  const getFormValue = data => {\n    debugger;\n    console.log(data);\n  };\n\n  const [name, setName] = useState(\"\");\n  const [value, setValue] = useState(false);\n  const [openPopUp, setOpenPopUp] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [isLogin, setIsLogin] = useState(false);\n  const [invalidLogin, setInvalidLogin] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => setOpenPopUp(true),\n          children: \" Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      openPopUp: openPopUp,\n      setOpenPopUp: setOpenPopUp,\n      isLogin: isLogin,\n      setIsLogin: setIsLogin,\n      setInvalidLogin: setInvalidLogin,\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        setUsername: setUsername,\n        getFormValue: getFormValue,\n        invalidLogin: invalidLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isLogin ? /*#__PURE__*/_jsxDEV(DataGridDemo, {\n      classes: {\n        dataGrid: 'MuiDataGrid-main'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      setUsername: setUsername,\n      getFormValue: getFormValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 73\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bLqrezXVA5HkRcd5d8xY3qErvGs=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kexuanliao/react-test/react-test/src/App.js"],"names":["React","Count","useState","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","Login","DataGridDemo","LoginForm","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","dataGrid","padding","marginTop","App","classes","login","name","setValue","console","log","nameChange","e","setName","target","value","getData","data","getFormValue","openPopUp","setOpenPopUp","username","setUsername","isLogin","setIsLogin","invalidLogin","setInvalidLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Count from './component/count';\nimport { useState } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Login from './component/login'\nimport DataGridDemo from './component/dataGrid';\n \nimport LoginForm from './component/loginForm'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  dataGrid: {\n    padding: theme.spacing(2),\n    marginTop: '20px'\n  },\n \n}));\nfunction App() {\n  const classes = useStyles();\n\n  const login = () => {\n    if (name == \"abc\") {\n      setValue(true)\n    }\n    console.log('form value' + name)\n  }\n  const nameChange = (e) => {\n    setName(e.target.value)\n  }\n  const getData = (data) => {\n    setName(data)\n  }\n  const getFormValue = (data) => {\n    debugger\n      console.log(data)\n  }\n \n  const [name, setName] = useState(\"\")\n  const [value, setValue] = useState(false);\n  const [openPopUp, setOpenPopUp] = useState(false)\n  const [username,setUsername] = useState(null)\n  const [isLogin,setIsLogin] = useState(false)\n  const [invalidLogin, setInvalidLogin] = useState(false)\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            News\n          </Typography>\n          <Button color=\"inherit\" onClick={() => setOpenPopUp(true)}> Login</Button>\n        </Toolbar>\n      </AppBar>\n      <Login openPopUp={openPopUp} setOpenPopUp={setOpenPopUp} isLogin={isLogin} setIsLogin={setIsLogin} setInvalidLogin={setInvalidLogin}>\n         <LoginForm username={username} setUsername={setUsername} getFormValue={getFormValue} invalidLogin={invalidLogin} />\n      </Login>\n      {isLogin?<DataGridDemo classes={{dataGrid:'MuiDataGrid-main'}}/>: <LoginForm username={username} setUsername={setUsername} getFormValue={getFormValue}/>}\n      {/* <input name=\"name\" type=\"text\" value={name} onChange={(e) => nameChange(e)} />\n      <Count value={value} callBack={getData} />\n      <button onClick={() => login()}>\n        login\n        </button>\n      {value ? \"login\" : \"logout\"} */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}