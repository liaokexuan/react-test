{"ast":null,"code":"var _jsxFileName = \"/Users/kexuanliao/react-test/react-test/src/component/login.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport loginForm from './loginForm';\nimport { SettingsOverscanOutlined } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function Login(props) {\n  // const [open, setOpen] = React.useState(false);\n  const {\n    openPopUp,\n    setOpenPopUp,\n    isLogin,\n    setIsLogin,\n    accessLoginF,\n    children,\n    setInvalidLogin\n  } = props; // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n\n  const handleClose = () => {\n    debugger;\n    let username = children.props.username;\n\n    if (username.firstName === \"abc\" && username.lastName === \"abc\") {\n      setIsLogin(true);\n      setOpenPopUp(false);\n    } else {\n      setInvalidLogin(true);\n    }\n  };\n\n  const handleCloseOutside = () => {\n    setOpenPopUp(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      maxWidth: \"sm\",\n      fullWidth: true,\n      onClose: handleCloseOutside,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: openPopUp,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: handleCloseOutside,\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kexuanliao/react-test/react-test/src/component/login.js"],"names":["React","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","loginForm","SettingsOverscanOutlined","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","Login","openPopUp","setOpenPopUp","isLogin","setIsLogin","accessLoginF","setInvalidLogin","handleClose","username","firstName","lastName","handleCloseOutside"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport loginForm from './loginForm'\nimport { SettingsOverscanOutlined } from '@material-ui/icons';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Login(props) {\n // const [open, setOpen] = React.useState(false);\n const {openPopUp,setOpenPopUp,isLogin,setIsLogin,accessLoginF,children,setInvalidLogin}=props;\n \n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n  const handleClose = () => {\n    debugger\n    let username= children.props.username;\n    if(username.firstName ===\"abc\" && username.lastName ===\"abc\"){\n      setIsLogin(true);\n       \n      setOpenPopUp(false);\n    }\n    else{\n      setInvalidLogin(true);\n    }\n    \n  };\n  const handleCloseOutside=()=>{\n    setOpenPopUp(false);\n\n  }\n\n  return (\n    <div>\n      <Dialog maxWidth=\"sm\" fullWidth={true} onClose={handleCloseOutside} aria-labelledby=\"customized-dialog-title\" open={openPopUp}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleCloseOutside}>\n        User\n        </DialogTitle>\n        <DialogContent dividers>\n             {children}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n           Login\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}